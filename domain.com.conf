#vhost_template: v3.0.0
#author: elmerfdz & goekem

#If 'sudo nginx -t' returns a error stating to increase server_names_hash_bucket_size
#uncomment the line below
#server_names_hash_bucket_size 64;

#PROXY UPSTREAMS
# Replace the IP with your services IP if it's not installed on this machine
# Remove '#' to enable the services you want

#upstream organizr-upstream		{ server 127.0.0.1; }
#upstream plex-upstream			{ server 192.168.1.2:32400; }
#upstream plexpy-upstream		{ server 127.0.0.1:8181; }
#upstream jackett-upstream		{ server 192.168.1.2:9117; } 
#upstream radarr-upstream		{ server 192.168.1.2:7878; }
#upstream sonarr-upstream		{ server 192.168.1.2:8989; }
#upstream headphones-upstream		{ server 127.0.0.1:8182; }
#upstream guacamole-upstream		{ server 127.0.0.1:8080; }
#upstream utorrent-upstream		{ server 192.168.1.2:1111; }

#SSL SERVER KEYS
#Rename & Place your keys in the below location/REMOVE '#' from the next 2 lines to enable SSL
#If you have multiple certs, move these lines to the correct server block(s)
#ssl_certificate       /etc/letsencrypt/live/domain/fullchain.pem;
#ssl_certificate_key   /etc/letsencrypt/live/domain/privkey.pem;

#DEFAULT NGINX CONFIG
#You can remove this after confirming nginx is working properly
server {
	listen       80;
	server_name  localhost;

	location / {
		root   /usr/share/nginx/html;
		index index.html index.htm;
	}

	error_page   500 502 503 504  /50x.html;
	location = /50x.html {
		root /usr/share/nginx/html;
	}
}
#/DEFAULT NGINX CONFIG

#Redirect all HTTP traffic to HTTPS
#server {
#	listen 80 default_server;
#	listen [::]:80 default_server;
#	server_name _;
#	return 301 https://$host$request_uri;
#}

#Front-facing Website (domain.com)
#server {
	#accept SSL only
#	listen 443 ssl http2;
#	listen [::]:443 ssl http2;
 #       include config/domain.com_ssl.conf;

#	server_name domain.com;
	#Where your front-facing website files are
#	root /var/www/html;
	#If your front facing site is serving PHP, add index.php below
#	index index.html index.htm;

#	location / { 
#		try_files $uri $uri/ =404; 
#	}

	#Uncomment for PHP
#       # pass PHP scripts to FastCGI server
#       location ~ \.php$ {
#               include snippets/fastcgi-php.conf;
#               # With php-fpm (or other unix sockets):
#               fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
#       }
#}
 
#Sub-domain setup
#server {
	#SSL only
#	listen 443 ssl http2;
#	listen [::]:443 ssl http2;
#	include config/domain.com_ssl.conf;
	
#	server_name subdomain.domain.com;
#	root /var/www/websites/subdomain.domain.com/html;
#	index index.php index.html index.htm;
	
	#Password protect these services
#	auth_basic "Administrator Login";
#	auth_basic_user_file /etc/nginx/config/ssl/domain.com/htaccess;

	#Org Auth
	#This handles authentication for organizr if installed
#	location /auth-admin { 
#		internal;
#		proxy_pass https://subdomain.domain.com/auth.php?admin;
#		proxy_pass_request_body off;
#		proxy_set_header Content-Length "";
#		proxy_set_header X-Original-URI $request_uri;
#		rewrite ^ /auth.php?admin; 
#	}

	#How to ban people from locations
#	location /auth-user { rewrite ^ /auth.php?user&ban=someone,thisperson; }  

	#organizr error page
#	error_page 400 401 403 404 405 408 500 502 503 504  /error.php?error=$status;

#	location / {
#		try_files $uri $uri/ =404;
		#uncomment for organizr
#		include config/phpblock.conf;  #PHP Block
#	}

	#PIMPMYLOG BLOCK WITH ORG AUTH
#	location ^~ /PimpMyLog/ {
#		auth_request /auth-admin;
#		include config/phpblock.conf;
#	}

	#PLEX subdirectory block required for Org SSO
#	location /plex/ {
#		auth_request /auth-admin;
#		proxy_pass http://plex-upstream/;
#		include config/proxy.conf;
#	}
#	if ($http_referer ~* /plex/) {
#		rewrite ^/web/(.*) /plex/web/$1? redirect;
#	}

	# ombi v3
#	location /ombi/ {
#		proxy_pass http://ombi-upstream;
#		proxy_set_header Host $host;
#		proxy_set_header X-Forwarded-Host $server_name;
#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header X-Forwarded-Ssl on;
#		proxy_set_header X-Forwarded-Proto $scheme;
#		proxy_read_timeout  90;
#		proxy_redirect http://ombi-upstream https://$host;
#	}
#	if ($http_referer ~* /ombi/) {
#		rewrite ^/dist/([0-9\d*]).js /ombi/dist/$1.js last;
#	}

	#WoL Server
#	location /wol/ {
#	        alias /var/www/websites/wol/;
#	        index index.php;
#	        #pass PHP scripts to FastCGI server
#	        location ~ \.php$ {
#	                include snippets/fastcgi-php.conf;
#	                include fastcgi_params;
#	                #With php-fpm (or other unix sockets):
#	                fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
#			#Needed for location block:
#	                fastcgi_param SCRIPT_FILENAME $request_filename;
#	        }
#	}

	#Sonarr
#	location /sonarr {
#		auth_request /auth-admin;
#		proxy_pass http://sonarr-upstream;
#		include config/proxy.conf;
#	}

	#Radarr
#	location /radarr {
#		auth_request /auth-admin;
#		proxy_pass http://radarr-upstream;
#		include config/proxy.conf;
#	}

	#Jackett
#	location /jackett {
#		auth_request /auth-admin;
#		proxy_pass http://jackett-upstream;
#		include config/proxy.conf;
#	}

	#uTorrent
	#uTorrent makes it difficult to change this location
#	location /gui {
#		auth_request /auth-admin;
#		proxy_pass http://utorrent-upstream;
#		include config/proxy.conf;
#		#rewrite ^/gui/(.*) /torrent/$1? redirect;
#	}

	#Guacamole
#	location /guacamole/ {
#		auth_request /auth-admin;
#		proxy_pass http://guacamole-upstream/guacamole/;
#		include config/proxy.conf;
#		proxy_buffering off;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header Upgrade $http_upgrade;
#		proxy_set_header Connection $http_connection;
#		access_log off;
#	}
#}




### You don't need to create a new subdomain for each service ###
#### It is easier to set up if you just create location blocks ###

#REMOVE '#' TO ENABLE THE SUBDOMAINS FOR THE SERVICES YOU WANT

#WoL SERVER
#server {
#	listen 443;
#	listen [::]:443;
#
#	root /var/www/wol;
#	index index.php;
#	server_name wol.domain.com;
#
#	location / {
#		# First attempt to serve request as file, then
#		# as directory, then fall back to displaying a 404.
#		try_files $uri $uri/ =404;
#	}
#
#	# pass PHP scripts to FastCGI server
#	location ~ \.php$ {
#		include snippets/fastcgi-php.conf;
#		# With php-fpm (or other unix sockets):
#		fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
#	}
#}

#PLEX SERVER
#server {
#	server_name  plex.domain.com;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	include config/domain.com_ssl.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		#auth_request /auth-user;
#		proxy_pass http://plex-upstream;
#		include config/proxy.conf;
#		proxy_redirect off;
#		proxy_buffering off;
#	}
#}


#PLEXPY SERVER
#server {
#	server_name  plexpy.domain.com;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	include config/domain.com_ssl.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-user;
#		proxy_pass https://plexpy-upstream;
#		include config/proxy.conf;
#
#	}
#}

#SONARR SERVER
#server {
#	server_name  sonarr.domain.com;
#	include config/domain.com.conf;
#	include config/domain.com_ssl.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-admin;
#		proxy_pass http://sonarr-upstream;
#		include config/proxy.conf;
#		#proxy_bind $server_addr;
#
#	}
#}

#RADARR SERVER
#server {
#	server_name  radarr.domain.com;
#	include config/domain.com.conf;
#	include config/domain.com_ssl.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-admin;
#		proxy_pass http://radarr-upstream;
#		include config/proxy.conf;
#
#	}
#}

#SABnzbd SERVER
#server {
#	server_name  sabnzbd.domain.com;
#	include config/domain.com.conf;
#	include config/domain.com_ssl.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {      
#		auth_request /auth-admin;
#		proxy_pass http://sabnzbd-upstream;
#		include config/proxy.conf;
#	}
#}

#NZBGET SERVER
#server {
#    server_name  nzbget.domain.com;
#	include config/domain.com.conf;
#	include config/domain.com_ssl.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {      
#		auth_request /auth-admin;
#		proxy_pass http://nzbget-upstream;
#		include config/proxy.conf;
#	}
#}

#DELUGE SERVER
#server {
#	server_name  deluge.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {      
#		auth_request /auth-admin;
#		proxy_pass http://deluge-upstream;
#		include config/proxy.conf;
#
#	}
#
#	location /upload {
#		auth_request /auth-admin;
#		proxy_pass http://deluge-upstream/upload;
#		include config/proxy.conf;
#
#	}
#}

#OMBI SERVER
#server {
#	server_name  request.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-user;
#		proxy_pass http://ombi-upstream;
#
#	}
#
#}

#MYLAR SERVER
#server {
#	server_name  mylar.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location ^~/ {
#		auth_request /auth-admin;
#		proxy_pass https://mylar-upstream;
#		include config/proxy.conf;
#
#	}
#}

#HEADPHONES SERVER
#server {
#	server_name  headphones.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location ^~/ {
#		auth_request /auth-admin;
#		proxy_pass http://headphones-upstream;
#		include config/proxy.conf;
#
#	}
#}

#LazyLibrarian SERVER
#server {
#	server_name  lazyl.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location ^~/ {
#		auth_request /auth-admin;
#		proxy_pass https://lazyl-upstream;
#		include config/proxy.conf;
#
#	}
#}

#NZBHYDRA SERVER
#server {
#	server_name  nzbhydra.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location ^~/ {
#		auth_request /auth-admin;
#		proxy_pass http://nzbhydra-upstream;
#		include config/proxy.conf;
#
#	}
#}

#UBOOQUITY SERVER
#server {
#	server_name  comics.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location ^~/ {
#		auth_request /auth-user;
#		proxy_pass https://comics-upstream;
#		include config/proxy.conf;
#
#	}
#}

#UBOOQUITY ADMIN SERVER
#server {
#	server_name  ubooquity.domain.com;
#	include config/domain.com.conf;
#	include config/domain.com_ssl.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#
#	location / {
#		add_header X-Frame-Option "DENY";
#		auth_request /auth-admin;
#		proxy_pass https://ubooquityadmin-upstream;
#		proxy_http_version 1.1;
#		proxy_pass_request_headers on;
#		proxy_set_header Connection "keep-alive";
#		proxy_store off;
#	}
#}

#UNIFI CLOUD CONTROLLER SERVER
#server {
#	server_name  unifi.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-admin;
#		proxy_pass https://unifi-upstream;
#		include config/proxy.conf;
#		proxy_buffering	off;
#	}
#}


#HOME ASSISTANT SERVER
#server {
#	server_name  hasse.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-admin;
#		proxy_pass http://hasse-upstream;
#		include config/proxy.conf;
#		proxy_buffering	off;
#
#	}
#}


#COCKPIT SERVER
#map $http_upgrade $connection_upgrade {
#	default upgrade;
#	'' close;
#}

#server {
#	server_name  cockpit.domain.com;
#	include config/domain.com.conf;
#	include config/domain.com_ssl.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		#include config/proxy.conf;
#		auth_request /auth-admin;
#		proxy_pass http://cockpit-upstream;
#		add_header X-Frame-Option "DENY";
#	        proxy_http_version 1.1;
#		proxy_buffering off;
#		proxy_set_header X-Real-IP  $remote_addr;
#		proxy_set_header Host $host;
#		proxy_set_header X-Forwarded-For $remote_addr;
#		# needed for websocket
#		proxy_set_header Upgrade $http_upgrade;
#		proxy_set_header Connection $connection_upgrade;
#		# change scheme of "Origin" to http
#		proxy_set_header Origin http://$host;
#
#		# Pass ETag header from cockpit to clients.
#		# See: https://github.com/cockpit-project/cockpit/issues/5239
#		gzip off;
#	}
#}

#NETDATA SERVER
#server {
#	server_name netdata.domain.com;
#	include config/domain.com.conf;
#	include config/domain.com_ssl.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#
#	location / {
#		add_header X-Frame-Option "DENY";
#		proxy_set_header X-Forwarded-Host $host;
#		proxy_set_header X-Forwarded-Server $host;
#	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		auth_request /auth-admin;
#		proxy_pass http://netdata-upstream;
#		proxy_http_version 1.1;
#		proxy_pass_request_headers on;
#		proxy_set_header Connection "keep-alive";
#		proxy_store off;
#	}
#}


#JACKETT SERVER
#server {
#	server_name  jackett.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-admin;
#		proxy_pass http://jackett-upstream;
#		include config/proxy.conf;
#		proxy_buffering	off;
#
#	}
#}

#PlexTogether WEB SERVER
#server {
#	server_name  plextogether.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-user;
#		proxy_pass http://ptweb-upstream;
#		#include config/proxy.conf;
#		proxy_hide_header X-Frame-Options;
#		add_header X-Frame-Option "DENY";
#		proxy_http_version 1.1;
#		proxy_set_header Upgrade $http_upgrade;
#		proxy_set_header Connection "upgrade";
#	}

#	location /ptweb {
#		auth_request /auth-user;
#		proxy_pass http://ptweb-upstream/ptweb;
#		proxy_hide_header X-Frame-Options;
#		add_header X-Frame-Option "DENY";
#		proxy_http_version 1.1;
#		proxy_set_header Upgrade $http_upgrade;
#		proxy_set_header Connection "upgrade";
#	}

#	location /ptserver {
#		auth_request /auth-user;
#		proxy_pass http://ptserver-upstream/ptserver;
#		proxy_hide_header X-Frame-Options;
#		add_header X-Frame-Option "DENY";
#		proxy_http_version 1.1;
#		proxy_set_header Upgrade $http_upgrade;
#		proxy_set_header Connection "upgrade";
#	}
#}

#CloudCommander
#server {
#	server_name  cloudcmd.domain.com;
#	include config/domain.com_ssl.conf;
#	include config/domain.com.conf;
#	include config/auth-admin.conf;
#	error_page 400 401 403 404 405 408 500 502 503 504 https://domain.com/error.php?error=$status;
#	location / {
#		auth_request /auth-admin;
#		proxy_pass http://cloudcmd-upstream;
#		include config/proxy.conf;
#		proxy_buffering	off;
#
#	}
#}
